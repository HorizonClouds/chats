openapi: 3.0.0
info:
  title: Chats API
  version: 1.0.0
  description: API documentation for chats microservice
servers:
  - url: /api/v1
paths:
  /message:
    post:
      summary: Create a new message
      tags:
        - Message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessage'
      responses:
        '201':
          description: The created message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Message created successfully
                  data:
                    $ref: '#/components/schemas/Message'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Validation error
                  appCode:
                    type: string
                    example: INVALID_INPUT
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
  /message/{id}:
    delete:
      summary: Delete a message
      tags:
        - Message
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the message to delete
          schema:
            type: string
      responses:
        '204':
          description: Message deleted successfully
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Message not found
                  appCode:
                    type: string
                    example: NOT_FOUND
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid parameters
                  appCode:
                    type: string
                    example: INVALID_INPUT
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
  /message/messageStatus/{id}:
    put:
      summary: Update the status of a message
      tags:
        - Message
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the message to update
          schema:
            type: string
      responses:
        '200':
          description: Message status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Message updated successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '60c72b2f9b1d8f0d8d0b6f9e'
                      writerUserId:
                        type: string
                        example: 'user123'
                      receiverUserId:
                        type: string
                        example: 'user456'
                      messageContent:
                        type: string
                        example: Hello, how are you?
                      shippingDate:
                        type: string
                        format: date-time
                        example: '2023-10-01T12:00:00.000Z'
                      messageStatus:
                        type: string
                        enum:
                          - READ
                          - UNREAD
                        example: READ
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Message not found
                  appCode:
                    type: string
                    example: NOT_FOUND
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid parameters
                  appCode:
                    type: string
                    example: INVALID_INPUT
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
  /chat/{writerUserId}/{receiverUserId}:
    get:
      summary: Get chat between two users
      tags:
        - Message
      parameters:
        - in: path
          name: writerUserId
          required: true
          description: ID of the user who sent the message
          schema:
            type: string
        - in: path
          name: receiverUserId
          required: true
          description: ID of the user who received the message
          schema:
            type: string
      responses:
        '200':
          description: The chat between two users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Success!
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  appCode:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Chat not found
                  appCode:
                    type: string
                    example: NOT_FOUND
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid parameters
                  appCode:
                    type: string
                    example: INVALID_INPUT
                  timestamp:
                    type: string
                    example: '2023-10-01T12:00:00.000Z'
components:
  schemas:
    Message:
      type: object
      properties:
        _id:
          type: string
          example: '60c72b2f9b1d8f0d8d0b6f9e'
        writerUserId:
          type: string
          example: 'user123'
        receiverUserId:
          type: string
          example: 'user456'
        messageContent:
          type: string
          example: Hello, how are you?
        shippingDate:
          type: string
          format: date-time
          example: '2023-10-01T12:00:00.000Z'
        messageStatus:
          type: string
          enum:
            - READ
            - UNREAD
          example: UNREAD
      required:
        - writerUserId
        - receiverUserId
        - messageContent
        - shippingDate
        - messageStatus
    NewMessage:
      type: object
      properties:
        writerUserId:
          type: string
          example: 'user123'
        receiverUserId:
          type: string
          example: 'user456'
        messageContent:
          type: string
          example: Hello, how are you?
      required:
        - writerUserId
        - receiverUserId
        - messageContent